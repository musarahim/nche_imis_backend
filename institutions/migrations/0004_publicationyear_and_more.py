# Generated by Django 5.2.3 on 2025-09-04 07:11

import django.db.models.deletion
import phonenumber_field.modelfields
import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('institutions', '0003_institution_alternative_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='PublicationYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('year', models.IntegerField()),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='institution',
            name='alternative_contact_person_phone',
            field=phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='UG'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='contact_person_phone',
            field=phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='UG'),
        ),
        migrations.AlterField(
            model_name='institution',
            name='deleted_at',
            field=models.DateTimeField(blank=True, editable=False, null=True),
        ),
        migrations.AlterField(
            model_name='institution',
            name='landline',
            field=phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='UG'),
        ),
        migrations.CreateModel(
            name='InstitutionVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('vehicle_name', models.CharField(max_length=255, unique=True)),
                ('registration_number', models.CharField(max_length=255, unique=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='institutions.institution')),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OtherDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('document_name', models.CharField(max_length=255, unique=True)),
                ('document', models.FileField(upload_to='')),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_documents', to='institutions.institution')),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CertificationAndClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('institution_name', models.CharField(max_length=255, unique=True)),
                ('acronym', models.CharField(max_length=255, unique=True)),
                ('postal_address', models.CharField(max_length=255, unique=True)),
                ('email_address', models.EmailField(max_length=255, unique=True)),
                ('website', models.URLField(max_length=255, unique=True)),
                ('landline', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='UG')),
                ('mobile', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='UG')),
                ('provisional_license_issue_date', models.DateField()),
                ('provisional_license', models.FileField(upload_to='certifications/')),
                ('location', models.TextField()),
                ('amount_of_land', models.DecimalField(decimal_places=2, max_digits=10)),
                ('land_title', models.FileField(upload_to='land_titles/')),
                ('land_in_use', models.DecimalField(decimal_places=2, max_digits=10)),
                ('land_for_future_use', models.DecimalField(decimal_places=2, max_digits=10)),
                ('year_obtained', models.IntegerField()),
                ('leased_or_rented', models.DecimalField(decimal_places=2, max_digits=10)),
                ('lease_or_rent_agreement', models.FileField(upload_to='land_titles/')),
                ('classrooms', models.IntegerField()),
                ('libraries', models.IntegerField()),
                ('science_labs', models.IntegerField()),
                ('computer_labs', models.IntegerField()),
                ('staff_houses', models.IntegerField()),
                ('staff_houses_number', models.IntegerField()),
                ('administrative_staff_area', models.IntegerField()),
                ('area_for_staff_use', models.IntegerField()),
                ('administrative_block_area', models.IntegerField()),
                ('student_Welfare_offices', models.IntegerField()),
                ('sick_bay_area', models.IntegerField()),
                ('hostels_area', models.IntegerField()),
                ('meeting_hall_area', models.IntegerField()),
                ('master_plan', models.FileField(upload_to='land_titles/')),
                ('area_of_playground', models.IntegerField()),
                ('available_playgrounds', models.CharField(max_length=255)),
                ('area_of_empty_space', models.IntegerField()),
                ('total_roads_mileage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('water_source', models.CharField(max_length=255)),
                ('power_source', models.CharField(max_length=255)),
                ('has_cultivable_land', models.BooleanField()),
                ('cultivable_land', models.DecimalField(decimal_places=2, max_digits=10)),
                ('library_books', models.IntegerField()),
                ('text_books', models.IntegerField()),
                ('computers_in_use', models.IntegerField()),
                ('computers_in_library', models.IntegerField()),
                ('academic_staff_computers', models.IntegerField()),
                ('administrative_staff_computers', models.IntegerField()),
                ('library_computer_software', models.IntegerField()),
                ('students_have_access', models.BooleanField()),
                ('has_internet_access', models.BooleanField()),
                ('library_seats', models.IntegerField()),
                ('classroom_seats', models.IntegerField()),
                ('laboratories_seats', models.IntegerField()),
                ('administration_block_seats', models.IntegerField()),
                ('student_facilities', models.TextField()),
                ('full_time_staff', models.IntegerField()),
                ('intended_full_time_staff', models.IntegerField()),
                ('full_time_staff_qualification', models.FileField(upload_to='')),
                ('part_time_staff', models.IntegerField()),
                ('part_time_staff_qualification', models.FileField(upload_to='')),
                ('phd_holders', models.IntegerField()),
                ('phd_holder_discipline', models.FileField(upload_to='')),
                ('masters_holders', models.IntegerField()),
                ('masters_holders_discipline', models.FileField(upload_to='')),
                ('bachelor_holders', models.IntegerField()),
                ('bachelor_holders_discipline', models.FileField(upload_to='')),
                ('diploma_holders', models.IntegerField()),
                ('diploma_holders_discipline', models.FileField(upload_to='')),
                ('average_staff_student_ratio', models.IntegerField()),
                ('programme_staff_student_ratio', models.FileField(upload_to='')),
                ('staff_overload', models.IntegerField()),
                ('administrative_staff', models.IntegerField()),
                ('support_staff', models.IntegerField()),
                ('council_members', models.FileField(upload_to='')),
                ('senate_members', models.FileField(upload_to='')),
                ('governing_council_chairperson', models.CharField(max_length=255)),
                ('governing_council_vice', models.CharField(max_length=255)),
                ('principal', models.CharField(max_length=255)),
                ('academic_registrar', models.CharField(max_length=255)),
                ('heads_of_academic_divisions', tinymce.models.HTMLField(null=True)),
                ('academic_board_members', tinymce.models.HTMLField(null=True)),
                ('institution_ownership', tinymce.models.HTMLField(null=True)),
                ('other_assets', models.FileField(upload_to='')),
                ('anual_budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('previous_financial_year_accounts', models.FileField(upload_to='')),
                ('fee_structure', models.FileField(upload_to='')),
                ('fees_percent_budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('other_institution_income', models.TextField()),
                ('infrastructure_development', models.DecimalField(decimal_places=2, max_digits=10)),
                ('research_development', models.DecimalField(decimal_places=2, max_digits=10)),
                ('computer_hardware_software', models.DecimalField(decimal_places=2, max_digits=10)),
                ('science_lab_equipment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('library_equipment', models.DecimalField(decimal_places=2, max_digits=10)),
                ('staff_development', models.DecimalField(decimal_places=2, max_digits=10)),
                ('staff_salaries', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_bankers', models.TextField()),
                ('vision', models.TextField()),
                ('mission', models.TextField()),
                ('specific_objectives', models.TextField()),
                ('logo', models.ImageField(null=True, upload_to='')),
                ('stractegic_plan', models.FileField(upload_to='')),
                ('current_programmes', tinymce.models.HTMLField(null=True)),
                ('area_of_competence', tinymce.models.HTMLField(null=True)),
                ('feature_programmes', tinymce.models.HTMLField(null=True)),
                ('total_number_of_students', models.IntegerField()),
                ('programme_distribution', tinymce.models.HTMLField(null=True)),
                ('eastern_students', models.IntegerField()),
                ('central_students', models.IntegerField()),
                ('northern_students', models.IntegerField()),
                ('western_students', models.IntegerField()),
                ('east_africans_students', models.IntegerField()),
                ('other_students', models.IntegerField()),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='institutions.institution')),
                ('publication_years', models.ManyToManyField(to='institutions.publicationyear')),
            ],
            options={
                'ordering': ['-created'],
                'abstract': False,
            },
        ),
    ]
